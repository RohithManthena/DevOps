# I used an AWS LINUX machine to do this part of the assignment.

#this is the shell script to run run the docker container using sql image and then execute all the files in the folder,

#!/bin/bash
#Docker-SQL-SEVER

docker build -t sqlserver:latest .
docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Revanth@1server" -p 1433:1433 -d --name sqlserver sqlserver:latest
sleep 30
docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "Revanth@1server" -i /DBscripts/01-create-database.sql
docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "Revanth@1server" -i /DBscripts/02-create-table.sql
docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "Revanth@1server" -i /DBscripts/03-insert-data.sql

#This is the dockerfile saved in the same directory where the above shell script is run. It is used to build custom image of the sql server with a DBscripts folder in the root directory copied from the linux machines home directory.
FROM mcr.microsoft.com/mssql/server:2019-latest
WORKDIR /
USER root
RUN mkdir -p DBscripts/
COPY DBScripts/* /DBscripts/


## Here, I have opened the 1433 port from my ipaddress by configuring the security groups and I was able to connect from my SSMS and verify the things done above.
## The thing I did not implement is the script able to run all the sql files in the folder in ascending order by itself. 
#For that my idea is to get all the files names first and then get the first two characters of all the filenames change them to int type and then execute them in increasing order.
#I am very comfortable in implementing this using python but I got some failures while trying it with shell.
